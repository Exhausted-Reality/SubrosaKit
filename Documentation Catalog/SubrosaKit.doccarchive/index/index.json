{"interfaceLanguages":{"swift":[{"children":[{"title":"Encryption Algorithms","type":"groupMarker"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/decryptionpropertyset\/init(data:key:computetype:)","title":"init(data: Data, key: Data?, computeType: ComputeType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/decryptionpropertyset\/computetype","title":"var computeType: ComputeType","type":"property"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/decryptionpropertyset\/data","title":"var data: Data","type":"property"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/decryptionpropertyset\/key","title":"var key: Data?","type":"property"}],"path":"\/documentation\/subrosakit\/sbrconfidential\/decryptionpropertyset","title":"SBRConfidential.DecryptionPropertySet","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/encryptionpropertyset\/init(text:key:computetype:)","title":"init(text: String, key: Data?, computeType: ComputeType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/encryptionpropertyset\/computetype","title":"var computeType: ComputeType","type":"property"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/encryptionpropertyset\/key","title":"var key: Data?","type":"property"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/encryptionpropertyset\/text","title":"var text: String","type":"property"}],"path":"\/documentation\/subrosakit\/sbrconfidential\/encryptionpropertyset","title":"SBRConfidential.EncryptionPropertySet","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/keypair\/init(privatekey:publickey:)","title":"init(privateKey: Data, publicKey: Data?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/keypair\/privatekey","title":"var privateKey: Data","type":"property"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/keypair\/publickey","title":"var publicKey: Data?","type":"property"}],"path":"\/documentation\/subrosakit\/sbrconfidential\/keypair","title":"SBRConfidential.KeyPair","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/sharedsecret\/init(keypair:salt:)","title":"init(keyPair: KeyPair, salt: Data?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/sharedsecret\/keypair","title":"var keyPair: KeyPair","type":"property"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/sharedsecret\/salt","title":"var salt: Data?","type":"property"}],"path":"\/documentation\/subrosakit\/sbrconfidential\/sharedsecret","title":"SBRConfidential.SharedSecret","type":"class"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/init(with:)","title":"init(with: EncryptionType)","type":"init"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/computetype\/automatic","title":"case automatic","type":"case"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/computetype\/cpu","title":"case cpu","type":"case"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/computetype\/gpu","title":"case gpu","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/computetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/subrosakit\/sbrconfidential\/computetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/subrosakit\/sbrconfidential\/computetype","title":"SBRConfidential.ComputeType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/encryptiontype\/aes(keysize:)","title":"case aes(keySize: KeySize)","type":"case"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/encryptiontype\/eddsa(hashvalue:keysize:)","title":"case eddsa(hashValue: HashValue, keySize: KeySize)","type":"case"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/encryptiontype\/sha2(hashvalue:)","title":"case sha2(hashValue: HashValue)","type":"case"}],"path":"\/documentation\/subrosakit\/sbrconfidential\/encryptiontype","title":"SBRConfidential.EncryptionType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/hashvalue\/bits256","title":"case bits256","type":"case"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/hashvalue\/bits384","title":"case bits384","type":"case"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/hashvalue\/bits512","title":"case bits512","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/hashvalue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/subrosakit\/sbrconfidential\/hashvalue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/subrosakit\/sbrconfidential\/hashvalue","title":"SBRConfidential.HashValue","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/keysize\/bits128","title":"case bits128","type":"case"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/keysize\/bits192","title":"case bits192","type":"case"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/keysize\/bits256","title":"case bits256","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/keysize\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/subrosakit\/sbrconfidential\/keysize\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/subrosakit\/sbrconfidential\/keysize","title":"SBRConfidential.KeySize","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/convertdatatostring(_:)-4fe9m","title":"func convertDataToString([Data]) -> [String]?","type":"method"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/convertdatatostring(_:)-5qar5","title":"func convertDataToString(Data) -> String?","type":"method"}],"path":"\/documentation\/subrosakit\/sbrconfidential\/sbrdataconvertible-implementations","title":"SBRDataConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/decrypt(propertyset:)","title":"func decrypt(propertySet: DecryptionPropertySet) -> String?","type":"method"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/decrypt(propertysets:)","title":"func decrypt(propertySets: [DecryptionPropertySet]) -> [String]?","type":"method"}],"path":"\/documentation\/subrosakit\/sbrconfidential\/sbrdecryptable-implementations","title":"SBRDecryptable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/encrypt(propertyset:)","title":"func encrypt(propertySet: EncryptionPropertySet) -> Data?","type":"method"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/encrypt(propertysets:)","title":"func encrypt(propertySets: [EncryptionPropertySet]) -> [Data]?","type":"method"}],"path":"\/documentation\/subrosakit\/sbrconfidential\/sbrencryptable-implementations","title":"SBREncryptable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/generatekey(with:)","title":"func generateKey(with: SharedSecret?) -> Data?","type":"method"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/generatekeys(with:)","title":"func generateKeys(with: [SharedSecret]?) -> [Data]?","type":"method"}],"path":"\/documentation\/subrosakit\/sbrconfidential\/sbrkeygeneratable-implementations","title":"SBRKeyGeneratable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/generatekeypair()","title":"func generateKeyPair() -> KeyPair?","type":"method"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/generatekeypairs(with:)","title":"func generateKeyPairs(with: UInt) -> [KeyPair]?","type":"method"}],"path":"\/documentation\/subrosakit\/sbrconfidential\/sbrkeypairgeneratable-implementations","title":"SBRKeyPairGeneratable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/generatesalt()","title":"func generateSalt() -> Data?","type":"method"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/generatesalts(with:)","title":"func generateSalts(with: UInt) -> [Data]?","type":"method"}],"path":"\/documentation\/subrosakit\/sbrconfidential\/sbrsaltgeneratable-implementations","title":"SBRSaltGeneratable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/convertstringtodata(_:)-1b0db","title":"func convertStringToData([String]) -> [Data]?","type":"method"},{"path":"\/documentation\/subrosakit\/sbrconfidential\/convertstringtodata(_:)-1bmr8","title":"func convertStringToData(String) -> Data?","type":"method"}],"path":"\/documentation\/subrosakit\/sbrconfidential\/sbrstringconvertible-implementations","title":"SBRStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/subrosakit\/sbrconfidential","title":"SBRConfidential","type":"class"},{"title":"SDK Specification","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/subrosakit\/sbrkit\/sdkversion\/major","title":"var major: UInt16","type":"property"},{"path":"\/documentation\/subrosakit\/sbrkit\/sdkversion\/minor","title":"var minor: UInt16","type":"property"},{"path":"\/documentation\/subrosakit\/sbrkit\/sdkversion\/patch","title":"var patch: UInt16","type":"property"}],"path":"\/documentation\/subrosakit\/sbrkit\/sdkversion","title":"SBRKit.SDKVersion","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/subrosakit\/sbrkit\/build","title":"let build: SDKBuild","type":"property"},{"path":"\/documentation\/subrosakit\/sbrkit\/version","title":"let version: SDKVersion","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/subrosakit\/sbrkit\/sdkbuild","title":"SBRKit.SDKBuild","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/subrosakit\/sbrkit\/info","title":"static let info: SBRKitSpecificationable","type":"property"}],"path":"\/documentation\/subrosakit\/sbrkit","title":"SBRKit","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/subrosakit\/sbrkitspecificationable\/build","title":"var build: SBRKit.SDKBuild","type":"property"},{"path":"\/documentation\/subrosakit\/sbrkitspecificationable\/version","title":"var version: SBRKit.SDKVersion","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/subrosakit\/sbrkitspecificationable\/info","title":"static var info: SBRKitSpecificationable","type":"property"}],"path":"\/documentation\/subrosakit\/sbrkitspecificationable","title":"SBRKitSpecificationable","type":"protocol"}],"path":"\/documentation\/subrosakit","title":"SubrosaKit","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}